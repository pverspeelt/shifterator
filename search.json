[{"path":"https://pverspeelt.github.io/shifterator/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Philippe Verspeelt Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pverspeelt.github.io/shifterator/articles/introduction_shifterator.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"Introduction to shifterator","text":"Read following paper details word shifts, please cite use work: (Gallagher et al. 2021)","code":""},{"path":"https://pverspeelt.github.io/shifterator/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Philippe Verspeelt. Author, maintainer.","code":""},{"path":"https://pverspeelt.github.io/shifterator/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Verspeelt P (2022). shifterator: Functionality Constructing Word Shift Graphs. https://github.com/pverspeelt/shifterator, https://pverspeelt.github.io/shifterator/.","code":"@Manual{,   title = {shifterator: Functionality for Constructing Word Shift Graphs},   author = {Philippe Verspeelt},   year = {2022},   note = {https://github.com/pverspeelt/shifterator, https://pverspeelt.github.io/shifterator/}, }"},{"path":"https://pverspeelt.github.io/shifterator/index.html","id":"shifterator","dir":"","previous_headings":"","what":"Functionality for Constructing Word Shift Graphs","title":"Functionality for Constructing Word Shift Graphs","text":"Shifterator package provides functionality constructing word shift graphs, vertical bart charts quantify words contribute pairwise difference two texts contribute. allowing look changes words used, word shifts help conduct analyses sentiment, entropy, divergence fundamentally interpretable.","code":""},{"path":"https://pverspeelt.github.io/shifterator/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functionality for Constructing Word Shift Graphs","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"pverspeelt/shifterator\")"},{"path":"https://pverspeelt.github.io/shifterator/index.html","id":"introduction-to-shifterator","dir":"","previous_headings":"","what":"Introduction to shifterator","title":"Functionality for Constructing Word Shift Graphs","text":"shifterator port python shifterator package visualizing pairwise comparisons texts. detailed information formulas used calculate shifts, can look python cookbook. ’m going look Animal Crossing review dataset used #TidyTuesday episode Julia Silge. link blog post. dataset used give quick overview prepare data used shifterator functions plot outcome word shift graphs. let’s load data quick look grade distribution.  quick look data shows data concentrated ends, 0 10. mean grade 4.22 median 2. let’s take definition used blog post, score higher 7is good review bad review. using data cleaning rule get rid word “Expand” appears end lot reviews. Now data split, shifterator functions expects data two columns, words frequencies. can build lot different ways, since ’m using data blog post Julia Silge, use tidytext create word frequency tables. creation frequency tables, quick look top 15 words appear positive negative reviews.  Looking graphs, can see “game” “island” top words . word “fun” number 10 positive reviews expected. top words negative reviews leave lot guessing . shifterator comes play. calculations words texts often appear give weight . several word shift calculations available shifterator can help distinguish words important one text .  shift graph shows words interesting way. Now can see words related positive (purple) side negative (yellow) side. word “player” now top negative word comparing positive versus negative reviews. expect, words “amazing”, “fantastic”, “10” positive, “1”, “2”, “fix” negative. Nintendo scores high negative side, might interesting someone figure .","code":"library(dplyr) library(readr) library(stringr) library(tidytext) library(ggplot2) library(shifterator)  user_reviews <- read_tsv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/user_reviews.tsv\")  user_reviews %>%   count(grade) %>%   ggplot(aes(grade, n)) +   geom_col(fill = \"steelblue\") negative_reviews <- user_reviews %>%    mutate(text = str_remove(text, \"Expand$\")) %>%   filter(grade <= 7)  positive_reviews <- user_reviews %>%    mutate(text = str_remove(text, \"Expand$\")) %>%   filter(grade > 7) cleaned_negative_reviews <- negative_reviews %>%    unnest_tokens(word, text) %>%    anti_join(stop_words) %>%    group_by(word) %>%    summarise(freq = n())  cleaned_positive_reviews = positive_reviews %>%    unnest_tokens(word, text) %>%    anti_join(stop_words) %>%    group_by(word) %>%    summarise(freq = n()) library(patchwork)   p_neg <- cleaned_negative_reviews %>%    top_n(15) %>%    ggplot(aes(reorder(word, freq), y = freq)) +   geom_bar(stat = \"identity\", fill = \"darkred\") +    labs(title = \"Negative reviews\", x = \"words\") +   coord_flip()  p_pos <- cleaned_positive_reviews %>%    top_n(15) %>%    ggplot(aes(reorder(word, freq), y = freq)) +   geom_bar(stat = \"identity\", fill = \"darkgreen\") +    labs(title = \"Positive reviews\", x = \"words\") +   coord_flip()  p_neg + p_pos entropy <- entropy_shift(cleaned_positive_reviews, cleaned_negative_reviews) get_shift_graphs(entropy, text_names = c(\"positive\", \"negative\"))"},{"path":"https://pverspeelt.github.io/shifterator/index.html","id":"citation","dir":"","previous_headings":"Introduction to shifterator","what":"Citation","title":"Functionality for Constructing Word Shift Graphs","text":"Read following paper details word shifts, please cite use work: (Gallagher et al. 2021)","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/entropy_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Entropy Shift — entropy_shift","title":"Entropy Shift — entropy_shift","text":"Shift object calculating shift entropy two systems.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/entropy_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entropy Shift — entropy_shift","text":"","code":"entropy_shift(   type2freq_1,   type2freq_2,   base = 2L,   alpha = 1,   reference_value = 0,   normalization = \"variation\" )"},{"path":"https://pverspeelt.github.io/shifterator/reference/entropy_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entropy Shift — entropy_shift","text":"type2freq_1 data.frame containing words frequencies. type2freq_2 data.frame containing words frequencies. base base logarithm computing entropy scores. alpha parameter generalized Tsallis entropy. Setting 'alpha = 1' recovers Shannon entropy. reference_value Optional. String numeric. reference score use partition scores two different regimes. 'average', uses average score according type2freq_1 type2score_1. lexicon used type2score, need use middle point lexicon's scale. value supplied, zero used reference point. See details information. normalization Optional. Default value: \"variation\". 'variation', normalizes shift scores sum absolute values sums 1. 'trajectory', normalizes sum shift scores 1 -1. trajectory normalization applied total shift score 0, scores left unnormalized total 0 'trajectory' specified.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/entropy_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Entropy Shift — entropy_shift","text":"Returns list object class shift.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/entropy_shift.html","id":"shannon-entropy-shifts","dir":"Reference","previous_headings":"","what":"Shannon Entropy Shifts","title":"Entropy Shift — entropy_shift","text":"can use Shannon entropy identify \"surprising\" words vary two texts. Shannon entropy H calculated : \\(H(P) = \\sum_i p_i \\log \\frac{1}{p_i}\\) factor \\(-\\log p_i\\) surprisal value word. less often word appears text, surprising . Shannon entropy can interpreted average surprisal value text. can compare two texts taking difference entropies, \\(H(P^{(2)}) - H(P^{(1)})\\). , can get contribution \\(\\delta H_i\\) word difference: \\(\\delta H_i = p_i^{(2)} \\log \\frac{1}{p_i^{(2)}} - p_i^{(1)} \\log \\frac{1}{p_i^{(1)}}\\) can rank contributions plot Shannon entropy word shift. contribution \\(\\delta H_i\\) positive, word higher score second text. contribution negative, score higher first text. contributions \\(\\delta H_i\\) available type2shift_score column shift_scores data.frame shift object. surprisals available type2score_1 type2score_2 columns.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/entropy_shift.html","id":"tsallis-entropy-shifts","dir":"Reference","previous_headings":"","what":"Tsallis Entropy Shifts","title":"Entropy Shift — entropy_shift","text":"Tsallis entropy generalization Shannon entropy allows us emphasize common less common words altering order parameter \\(\\alpha\\) \\> 0. \\(\\alpha\\) \\< 1, uncommon words weighted heavily, \\(\\alpha\\) \\> 1, common words weighted heavily. case \\(\\alpha\\) = 1, Tsallis entropy equivalent Shannon entropy, equally weights common uncommon words. contribution \\(\\delta H_i^{\\alpha}\\) word difference Tsallis entropy two texts given \\(\\delta H_i^{\\alpha} = \\frac{-\\bigl(p_i^{(2)}\\bigr)^\\alpha + \\bigl(p_i^{(1)}\\bigr)^\\alpha}{\\alpha - 1}\\). Tsallis entropy can calculated using entropy_shift passing parameter alpha.","code":""},{"path":[]},{"path":"https://pverspeelt.github.io/shifterator/reference/entropy_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Entropy Shift — entropy_shift","text":"","code":"library(shifterator) library(quanteda) #> Warning: undefined subclass \"unpackedMatrix\" of class \"mMatrix\"; definition not updated #> Warning: undefined subclass \"unpackedMatrix\" of class \"replValueSp\"; definition not updated #> Warning: Your current locale is not in the list of available locales. Some functions may not work properly. Refer to stri_locale_list() for more details on known locale specifiers. #> Warning: Your current locale is not in the list of available locales. Some functions may not work properly. Refer to stri_locale_list() for more details on known locale specifiers. #> Package version: 3.2.3 #> Unicode version: 13.0 #> ICU version: 66.1 #> Parallel computing: 2 of 2 threads used. #> See https://quanteda.io for tutorials and examples. library(quanteda.textstats) #> Warning: undefined subclass \"unpackedMatrix\" of class \"mMatrix\"; definition not updated #> Warning: undefined subclass \"unpackedMatrix\" of class \"replValueSp\"; definition not updated library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  reagan <- corpus_subset(data_corpus_inaugural, President == \"Reagan\") %>%    tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>% # to move from classes frequency, textstat, and data.frame to data.frame select(feature, frequency)   bush <- corpus_subset(data_corpus_inaugural, President == \"Bush\" & FirstName == \"George W.\") %>%  tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>%  select(feature, frequency)  shannon_entropy_shift <- entropy_shift(reagan, bush)  tsallis_entropy_shift <- entropy_shift(reagan, bush, alpha = 0.8)"},{"path":"https://pverspeelt.github.io/shifterator/reference/get_bar_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bar colours for plotting — get_bar_colours","title":"Get bar colours for plotting — get_bar_colours","text":"Returns component colours type's contribution bars.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_bar_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bar colours for plotting — get_bar_colours","text":"","code":"get_bar_colours(top_shift_scores, all_pos_contributions)"},{"path":"https://pverspeelt.github.io/shifterator/reference/get_bar_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bar colours for plotting — get_bar_colours","text":"top_shift_scores top n values shift_scores data.frame shift object all_pos_contributions Defaults FALSE calling get_shift_graphs.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_bar_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bar colours for plotting — get_bar_colours","text":"Returns list 3 values. values lists colors assign p_diff s_diff components respectively. just overall contributions shown simple (detailed) shift graph, \"total\" colours used.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_entropy_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Entropy Scores — get_entropy_scores","title":"Get Entropy Scores — get_entropy_scores","text":"Get Entropy Scores","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_entropy_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Entropy Scores — get_entropy_scores","text":"","code":"get_entropy_scores(type2score_1, type2score_2, base = 2L, alpha = 1)"},{"path":"https://pverspeelt.github.io/shifterator/reference/get_entropy_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Entropy Scores — get_entropy_scores","text":"type2score_1  type2score_2  base base logarithm computing entropy scores. alpha parameter generalized Tsallis entropy. Setting 'alpha = 1' recovers Shannon entropy.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_entropy_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Entropy Scores — get_entropy_scores","text":"data.frame containing entropy scores","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_entropy_word_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Entropy Word Scores — get_entropy_word_scores","title":"Get Entropy Word Scores — get_entropy_word_scores","text":"Calculates generalized Tsallis entropy scores.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_entropy_word_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Entropy Word Scores — get_entropy_word_scores","text":"","code":"get_entropy_word_scores(score, base = 2L, alpha = 1)"},{"path":"https://pverspeelt.github.io/shifterator/reference/get_entropy_word_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Entropy Word Scores — get_entropy_word_scores","text":"score relative frequency. base base logarithm computing entropy scores. alpha parameter generalized Tsallis entropy. Setting 'alpha = 1' recovers Shannon entropy.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_entropy_word_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Entropy Word Scores — get_entropy_word_scores","text":"entropy score.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_jsd_word_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get JS Divergence Scores — get_jsd_word_scores","title":"Get JS Divergence Scores — get_jsd_word_scores","text":"Calculates contribution types two systems Jensen-Shannon divergence (JSD) systems","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_jsd_word_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get JS Divergence Scores — get_jsd_word_scores","text":"","code":"get_jsd_word_scores(   type2score_1,   type2score_2,   weight_1,   weight_2,   base,   alpha )"},{"path":"https://pverspeelt.github.io/shifterator/reference/get_jsd_word_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get JS Divergence Scores — get_jsd_word_scores","text":"type2score_1  type2score_2  weight_1 Relative weight type2freq_1 constructing mixed distribution. Together weight_2 sum 1. weight_2 Relative weight type2freq_2 constructing mixed distribution. Together weight_1 sum 1. base base logarithm computing entropy scores. alpha parameter generalized Tsallis entropy. Setting 'alpha = 1' recovers Shannon entropy.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_jsd_word_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get JS Divergence Scores — get_jsd_word_scores","text":"data.frame containing js scores","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_relative_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Relative Frequency — get_relative_frequency","title":"Get Relative Frequency — get_relative_frequency","text":"Calculates relative frequency (proportion) word data.frame.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_relative_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Relative Frequency — get_relative_frequency","text":"","code":"get_relative_frequency(data)"},{"path":"https://pverspeelt.github.io/shifterator/reference/get_relative_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Relative Frequency — get_relative_frequency","text":"data data.frame containing words counts.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_relative_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Relative Frequency — get_relative_frequency","text":"data.frame containing words relative frequencies.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_shift_graphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a collection of shift graphs — get_shift_graphs","title":"Generate a collection of shift graphs — get_shift_graphs","text":"called construct word shift graphs.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_shift_graphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a collection of shift graphs — get_shift_graphs","text":"","code":"get_shift_graphs(   x,   text_names = c(\"Text 1\", \"Text 2\"),   top_n = 50L,   detailed = FALSE )"},{"path":"https://pverspeelt.github.io/shifterator/reference/get_shift_graphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a collection of shift graphs — get_shift_graphs","text":"x shift object. text_names names text compare. Defaults \"Text 1\" \"Text 2\". top_n Integer value. Number words display main graph. Defaults 50 detailed Logical. Defaults \"FALSE\". default, shifts display overall contributions, rather detailed component contributions. setting value \"TRUE\" full details shifts visualized.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_shift_graphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a collection of shift graphs — get_shift_graphs","text":"Returns plots shift graphs.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/get_shift_graphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a collection of shift graphs — get_shift_graphs","text":"","code":"if (FALSE) { library(shifterator) library(quanteda) library(quanteda.textstats) library(dplyr)  reagan <- corpus_subset(data_corpus_inaugural, President == \"Reagan\") %>%    tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>% # to move from classes frequency, textstat, and data.frame to data.frame select(feature, frequency)   bush <- corpus_subset(data_corpus_inaugural, President == \"Bush\" & FirstName == \"George W.\") %>%  tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>%  select(feature, frequency)  prop <- proportion_shift(reagan, bush)  # plot the proportion shift graph get_shift_graphs(prop_shift, text_names = c(\"reagan\", \"bush\")) }"},{"path":"https://pverspeelt.github.io/shifterator/reference/jsdivergence_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Jensen-Shannon Divergence Shift — jsdivergence_shift","title":"Jensen-Shannon Divergence Shift — jsdivergence_shift","text":"Shift object calculating Jensen-Shannon divergence (JSD) two systems.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/jsdivergence_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jensen-Shannon Divergence Shift — jsdivergence_shift","text":"","code":"jsdivergence_shift(   type2freq_1,   type2freq_2,   weight_1 = 0.5,   weight_2 = 0.5,   base = 2L,   alpha = 1,   reference_value = 0,   normalization = \"variation\" )"},{"path":"https://pverspeelt.github.io/shifterator/reference/jsdivergence_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jensen-Shannon Divergence Shift — jsdivergence_shift","text":"type2freq_1 data.frame containing words frequencies. type2freq_2 data.frame containing words frequencies. weight_1 Relative weight type2freq_1 constructing mixed distribution. Together weight_2 sum 1. weight_2 Relative weight type2freq_2 constructing mixed distribution. Together weight_1 sum 1. base base logarithm computing entropy scores. alpha parameter generalized Tsallis entropy. Setting 'alpha = 1' recovers Shannon entropy. reference_value Optional. String numeric. reference score use partition scores two different regimes. 'average', uses average score according type2freq_1 type2score_1. lexicon used type2score, need use middle point lexicon's scale. value supplied, zero used reference point. See details information. normalization Optional. Default value: \"variation\". 'variation', normalizes shift scores sum absolute values sums 1. 'trajectory', normalizes sum shift scores 1 -1. trajectory normalization applied total shift score 0, scores left unnormalized total 0 'trajectory' specified.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/jsdivergence_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jensen-Shannon Divergence Shift — jsdivergence_shift","text":"Returns list object class shift.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/jsdivergence_shift.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jensen-Shannon Divergence Shift — jsdivergence_shift","text":"Jensen-Shannon divergence (JSD) accounts pathologies KLD. first creating mixture text \\(M\\), \\(M = \\pi_1 P^{(1)} + \\pi_2 P^{(2)}\\), \\(\\pi_1\\) \\(\\pi_2\\) weights mixture two corpora. JSD calculated average KLD text mixture text, \\(D^{(JS)} \\bigl(P^{(1)} || P^{(2)}\\bigr) = \\pi_1 D^{(KL)} \\bigl(P^{(1)} || M \\bigr) + \\pi_2 D^{(KL)} \\bigl(P^{(2)} || M \\bigr)\\) probability word mixture text \\(m_i = \\pi_1 p_i^{(1)} + \\pi_2 p_i^{(2)}\\), individual word's contribution JSD can written \\(\\delta JSD_i = m_i \\log \\frac{1}{m_i} - \\biggl( \\pi_i p_i^{(1)} \\log \\frac{1}{p_i^{(1)}} + \\pi_2 p_i^{(2)} \\log \\frac{1}{p_i^{(2)}} \\bigg)\\)","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/jsdivergence_shift.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Jensen-Shannon Divergence Shift — jsdivergence_shift","text":"JSD well-defined every word KLD taken respect mixture text M, contains every word texts design. Unlike measures, word's JSD contribution always positive, direct word shift graph depending text highest relative frequency. word's contribution zero \\(p_i^{(1)} = p_i^{(2)}\\). Like Shannon entropy, JSD can generalized using Tsallis entropy order can set parameter alpha. Quite often JSD effective pulling distinct words corpus (rather \"stop words\"), complex measure harder properly interpret whole. total Jensen-Shannon divergence accessed difference column shift object.","code":""},{"path":[]},{"path":"https://pverspeelt.github.io/shifterator/reference/jsdivergence_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jensen-Shannon Divergence Shift — jsdivergence_shift","text":"","code":"library(shifterator) library(quanteda) library(quanteda.textstats) library(dplyr)  reagan <- corpus_subset(data_corpus_inaugural, President == \"Reagan\") %>%    tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>% # to move from classes frequency, textstat, and data.frame to data.frame select(feature, frequency)   bush <- corpus_subset(data_corpus_inaugural, President == \"Bush\" & FirstName == \"George W.\") %>%  tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>%  select(feature, frequency)  jsd <- jsdivergence_shift(reagan, bush)"},{"path":"https://pverspeelt.github.io/shifterator/reference/kldivergence_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Kullback-Leibler Divergence Shift — kldivergence_shift","title":"Kullback-Leibler Divergence Shift — kldivergence_shift","text":"Shift object calculating Kullback-Leibler divergence (KLD) two systems.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/kldivergence_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kullback-Leibler Divergence Shift — kldivergence_shift","text":"","code":"kldivergence_shift(   type2freq_1,   type2freq_2,   base = 2L,   reference_value = 0,   normalization = \"variation\" )"},{"path":"https://pverspeelt.github.io/shifterator/reference/kldivergence_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kullback-Leibler Divergence Shift — kldivergence_shift","text":"type2freq_1 data.frame containing words frequencies. type2freq_2 data.frame containing words frequencies. base base logarithm computing entropy scores. reference_value Optional. String numeric. reference score use partition scores two different regimes. 'average', uses average score according type2freq_1 type2score_1. lexicon used type2score, need use middle point lexicon's scale. value supplied, zero used reference point. See details information. normalization Optional. Default value: \"variation\". 'variation', normalizes shift scores sum absolute values sums 1. 'trajectory', normalizes sum shift scores 1 -1. trajectory normalization applied total shift score 0, scores left unnormalized total 0 'trajectory' specified.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/kldivergence_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kullback-Leibler Divergence Shift — kldivergence_shift","text":"Returns list object class shift.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/kldivergence_shift.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kullback-Leibler Divergence Shift — kldivergence_shift","text":"Kullback-Leibler divergence (KLD) useful asymmetric measure two texts differ. One text reference text comparison text. let type2freq_1 reference text type2freq_2 comparison text, can calculate KLD \\(D^{(KL)}(P^{(2)} || P^{(1)}) = \\sum_i p_i^{(2)} \\log \\frac{p_i^{(2)}}{p_i^{(1)}}\\). word's contribution can written difference surprisals reference comparison text, similar Shannon entropy except weighting surprisal frequency word comparison. \\(\\delta KLD_i = p_i^{(2)} \\log \\frac{1}{p_i^{(1)}} - p_i^{(2)} \\log \\frac{1}{p_i^{2}}\\). contribution positive \\(p_i^{(2)} > p_i^{(1)}\\). Similarly, negative \\(p_i^{(2)} < p_i^{(1)}\\). total Kullback-Leibler divergence accessed difference column created shift object.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/kldivergence_shift.html","id":"warning","dir":"Reference","previous_headings":"","what":"WARNING","title":"Kullback-Leibler Divergence Shift — kldivergence_shift","text":"KLD well-defined every single word comparison text also reference text. case KLD diverges infinity.","code":""},{"path":[]},{"path":"https://pverspeelt.github.io/shifterator/reference/kldivergence_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kullback-Leibler Divergence Shift — kldivergence_shift","text":"","code":"if (FALSE) { library(shifterator) library(quanteda) library(quanteda.textstats) library(dplyr)  reagan <- corpus_subset(data_corpus_inaugural, President == \"Reagan\") %>%    tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>% # to move from classes frequency, textstat, and data.frame to data.frame select(feature, frequency)   bush <- corpus_subset(data_corpus_inaugural, President == \"Bush\" & FirstName == \"George W.\") %>%  tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>%  select(feature, frequency)  # This will return the message that the KL divergence is not well-defined. kld <- kldivergence_shift(reagan, bush) }"},{"path":"https://pverspeelt.github.io/shifterator/reference/proportion_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion Shift — proportion_shift","title":"Proportion Shift — proportion_shift","text":"Shift object calculating differences proportions types across two systems.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/proportion_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion Shift — proportion_shift","text":"","code":"proportion_shift(type2freq_1, type2freq_2)"},{"path":"https://pverspeelt.github.io/shifterator/reference/proportion_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportion Shift — proportion_shift","text":"type2freq_1 data.frame containing words frequencies. type2freq_2 data.frame containing words frequencies.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/proportion_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportion Shift — proportion_shift","text":"Returns list object class shift.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/proportion_shift.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Proportion Shift — proportion_shift","text":"easiest word shift graph can construct proportion shift. \\(p_i^{(1)}\\) relative frequency word first text, \\(p_i^{(2)}\\) relative frequency second text, proportion shift calculates difference: \\(\\delta p_i = p_i^{(2)} - p_i^{(1)}\\) difference positive (\\(\\delta p_i > 0\\)), word relatively common second text. negative (\\(\\delta p_i < 0\\)), relatively common first text. can rank words difference plot word shift graph.","code":""},{"path":[]},{"path":"https://pverspeelt.github.io/shifterator/reference/proportion_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportion Shift — proportion_shift","text":"","code":"#' library(shifterator) library(quanteda) library(quanteda.textstats) library(dplyr)  reagan <- corpus_subset(data_corpus_inaugural, President == \"Reagan\") %>%    tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>% # to move from classes frequency, textstat, and data.frame to data.frame select(feature, frequency)   bush <- corpus_subset(data_corpus_inaugural, President == \"Bush\" & FirstName == \"George W.\") %>%  tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>%  select(feature, frequency)  prop <- proportion_shift(reagan, bush)"},{"path":"https://pverspeelt.github.io/shifterator/reference/shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift — shift","title":"Shift — shift","text":"Shift object calculating weighted scores two systems types, shift ","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift — shift","text":"","code":"shift(   type2freq_1,   type2freq_2,   type2score_1 = NULL,   type2score_2 = NULL,   reference_value = NULL,   handle_missing_scores = \"error\",   stop_lens = NULL,   stop_words = NULL,   normalization = \"variation\" )"},{"path":"https://pverspeelt.github.io/shifterator/reference/shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift — shift","text":"type2freq_1 data.frame containing words frequencies. type2freq_2 data.frame containing words frequencies. type2score_1 Optional. lexicon containing 2 columns. first column words second column word score. type2score_2 Optional. lexicon containing 2 columns. first column words second column word score. reference_value Optional. String numeric. reference score use partition scores two different regimes. 'average', uses average score according type2freq_1 type2score_1. lexicon used type2score, need use middle point lexicon's scale. value supplied, zero used reference point. See details information. handle_missing_scores Optional. Default value: \"error\". \"error\", throws error whenever word score one score dictionary . \"exclude\", excludes word missing score one score dictionary word shift calculations, regardless may score dictionary. \"adopt\" score missing one dictionary, uses score dictionary available stop_lens Optional. vector 2 values. Denotes intervals scores excluded word shifts calculations. Types scores range excluded word shift calculations. See details information. stop_words Optional. vector contains words excluded word shifts calculations. normalization Optional. Default value: \"variation\". 'variation', normalizes shift scores sum absolute values sums 1. 'trajectory', normalizes sum shift scores 1 -1. trajectory normalization applied total shift score 0, scores left unnormalized total 0 'trajectory' specified.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift — shift","text":"Returns list object class shift.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/shifterator-package.html","id":null,"dir":"Reference","previous_headings":"","what":"shifterator: Functionality for Constructing Word Shift Graphs — shifterator-package","title":"shifterator: Functionality for Constructing Word Shift Graphs — shifterator-package","text":"shifterator package provides functionality constructing word shift graphs, horizontal bart charts quantify words contribute pairwise difference two texts contribute. allowing look changes words used, word shifts help conduct analyses sentiment, entropy, divergence fundamentally interpretable.","code":""},{"path":[]},{"path":"https://pverspeelt.github.io/shifterator/reference/shifterator-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"shifterator: Functionality for Constructing Word Shift Graphs — shifterator-package","text":"Maintainer: Philippe Verspeelt phiver4@gmail.com","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/user_reviews.html","id":null,"dir":"Reference","previous_headings":"","what":"User reviews of Animal Crossing. — user_reviews","title":"User reviews of Animal Crossing. — user_reviews","text":"dataset containing user reviews game Animal Crossing: New Horizons.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/user_reviews.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User reviews of Animal Crossing. — user_reviews","text":"","code":"user_reviews"},{"path":"https://pverspeelt.github.io/shifterator/reference/user_reviews.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"User reviews of Animal Crossing. — user_reviews","text":"data frame 53940 rows 10 variables: grade Raw score (0-10) higher score = better. user_name User name reviewer. text Raw text review. date Date review published.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/user_reviews.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"User reviews of Animal Crossing. — user_reviews","text":"https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-05-05/readme.md","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/weighted_avg_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Average Shift — weighted_avg_shift","title":"Weighted Average Shift — weighted_avg_shift","text":"Shift object calculating weighted scores two systems types, shift .","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/weighted_avg_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Average Shift — weighted_avg_shift","text":"","code":"weighted_avg_shift(   type2freq_1,   type2freq_2,   type2score_1 = NULL,   type2score_2 = NULL,   reference_value = NULL,   handle_missing_scores = \"error\",   stop_lens = NULL,   stop_words = NULL,   normalization = \"variation\" )"},{"path":"https://pverspeelt.github.io/shifterator/reference/weighted_avg_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Average Shift — weighted_avg_shift","text":"type2freq_1 data.frame containing words frequencies. type2freq_2 data.frame containing words frequencies. type2score_1 Optional. lexicon containing 2 columns. first column words second column word score. type2score_2 Optional. lexicon containing 2 columns. first column words second column word score. reference_value Optional. String numeric. reference score use partition scores two different regimes. 'average', uses average score according type2freq_1 type2score_1. lexicon used type2score, need use middle point lexicon's scale. value supplied, zero used reference point. See details information. handle_missing_scores Optional. Default value: \"error\". \"error\", throws error whenever word score one score dictionary . \"exclude\", excludes word missing score one score dictionary word shift calculations, regardless may score dictionary. \"adopt\" score missing one dictionary, uses score dictionary available stop_lens Optional. vector 2 values. Denotes intervals scores excluded word shifts calculations. Types scores range excluded word shift calculations. See details information. stop_words Optional. vector contains words excluded word shifts calculations. normalization Optional. Default value: \"variation\". 'variation', normalizes shift scores sum absolute values sums 1. 'trajectory', normalizes sum shift scores 1 -1. trajectory normalization applied total shift score 0, scores left unnormalized total 0 'trajectory' specified.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/weighted_avg_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Average Shift — weighted_avg_shift","text":"Returns list object class shift.","code":""},{"path":"https://pverspeelt.github.io/shifterator/reference/weighted_avg_shift.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Average Shift — weighted_avg_shift","text":"reference_value: lexicon used type2score, supply middle point lexicon's scale. scale 1 9, middle point use 5. reference value given, value 0 used. might skew results calculating shift scores. stop_lens: Stop_lens can used remove words fall within range shift score calculations. used combination supplying lexicon. scale lexicon one nine, can, example, remove words score 4 6 supplying vector c(4, 6).","code":""},{"path":[]},{"path":"https://pverspeelt.github.io/shifterator/reference/weighted_avg_shift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Average Shift — weighted_avg_shift","text":"","code":"#' library(shifterator) library(quanteda) library(quanteda.textstats) library(dplyr)  reagan <- corpus_subset(data_corpus_inaugural, President == \"Reagan\") %>%    tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>% # to move from classes frequency, textstat, and data.frame to data.frame select(feature, frequency)   bush <- corpus_subset(data_corpus_inaugural, President == \"Bush\" & FirstName == \"George W.\") %>%  tokens(remove_punct = TRUE) %>%  dfm() %>%  textstat_frequency() %>%  as.data.frame() %>%  select(feature, frequency)  was <- weighted_avg_shift(reagan, bush, handle_missing_scores = \"exclude\") #> There are 1461 words excluded from the calculations"}]
